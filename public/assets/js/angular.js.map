{"version":3,"sources":["annotated.js"],"names":[],"mappingsfile":"angular.js","sourcesContent":["var dependencies = [\n    'campsite.services',\n    'campsite.directives',\n    'campsite.controllers',\n\n    'ngAnimate',\n    'ngRoute',\n    'ngSanitize',\n    'angular.filter',\n    'validation',\n    'validation.rule',\n    'angularFileUpload',\n    '720kb.tooltips',\n    'toastr',\n    'angular.vertilize',\n    'ui.select'\n];\n\nvar campsite = {\n    app: angular.module('campsite', dependencies),\n    controllers: angular.module('campsite.controllers', []),\n    directives: angular.module('campsite.directives', []),\n    services: angular.module('campsite.services', [])\n};\n\ncampsite.app.config([\"$locationProvider\", \"$interpolateProvider\", \"$sceDelegateProvider\", \"toastrConfig\", function($locationProvider, $interpolateProvider, $sceDelegateProvider, toastrConfig) {\n    var supports_history_api = function() {\n        return !!(window.history && history.pushState);\n    };\n\n    $interpolateProvider.startSymbol('##');\n    $interpolateProvider.endSymbol('##');\n    if (supports_history_api()) {\n        $locationProvider.html5Mode(true);\n    } else {\n        $locationProvider.html5Mode(false);\n    }\n\n    $sceDelegateProvider.resourceUrlWhitelist([\n        'self',\n        'https://www.carqueryapi.com/**'\n    ]);\n\n    angular.extend(toastrConfig, {\n        allowHtml: false,\n        closeButton: true,\n        //closeHtml: '<button>&times;</button>',\n        extendedTimeOut: 1000,\n        iconClasses: {\n            error: 'toast-error',\n            info: 'toast-info',\n            success: 'toast-success',\n            warning: 'toast-warning'\n        },\n        messageClass: 'toast-message',\n        onHidden: null,\n        onShown: null,\n        onTap: null,\n        progressBar: true,\n        tapToDismiss: true,\n        timeOut: 5000,\n        titleClass: 'toast-title',\n        toastClass: 'toast',\n        autoDismiss: false,\n        containerId: 'toast-container',\n        maxOpened: 3,\n        newestOnTop: true,\n        positionClass: 'toast-bottom-center',\n        preventDuplicates: true,\n        preventOpenDuplicates: true,\n        target: 'body'\n    });\n\n}]);\n\ncampsite.directives.directive('pwCheck', function() {\n  return {\n    require: 'ngModel',\n    link: function (scope, elem, attrs, ctrl) {\n      var firstPassword = '#' + attrs.pwCheck;\n      elem.add(firstPassword).on('keyup', function () {\n        scope.$apply(function () {\n          var v = elem.val()===$(firstPassword).val();\n          ctrl.$setValidity('pwmatch', v);\n        });\n      });\n    }\n  }\n});\n\ncampsite.services.service('service', [\"$http\", \"$q\", function($http, $q){\n    this.fetch = function(method, url, data) {\n        var _promise = $q.defer();\n        $http({\n            method: method,\n            url: url,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function(response) {\n            _promise.resolve(response.data);\n        }, function(error) {\n            _promise.reject(error);\n        });\n\n        return _promise.promise;\n    };\n\n    this.fetch2 = function(method, url, data) {\n        var _promise = $q.defer();\n        $http({\n            method: method,\n            url: url,\n            params: data,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function(response) {\n            _promise.resolve(response.data);\n        }, function(error) {\n            _promise.reject(error);\n        });\n\n        return _promise.promise;\n    };\n\n    this.get = function(url, data) {\n        //var data = {};\n        return this.fetch2('GET', url, data);\n    };\n\n    this.post = function(url, data) {\n        return this.fetch('POST', url, data);\n    };\n\n    this.jsonp = function(url) {\n        return this.fetch('JSONP', url);\n    }\n}]);\n\ncampsite.controllers.controller('OfferCtrl', [\"$scope\", \"$rootScope\", \"$location\", \"service\", \"$window\", \"$route\", \"$timeout\", function($scope, $rootScope, $location, service, $window, $route, $timeout){\n    var self = this;\n    var savecampsiteurl = '/campsite-offer/store';\n\n    // Events\n    this.events = {\n\n        changeTemplate: function (index) {\n            self.state.template = self.state.templates[index];\n            /*var templateIndex = self.state.template.index;\n             var previousTemplateIndex = templateIndex - 1;\n             var nextTemplateIndex = templateIndex + 1;\n\n             var currentEl = angular.element( document.querySelector( '#head_step' + templateIndex ) );\n             var previousEl = angular.element( document.querySelector( '#head_step' + previousTemplateIndex) );\n             var nextEl = angular.element( document.querySelector( '#head_step' + nextTemplateIndex) );\n\n             for (i = 0; i < self.state.templates.length; i++) {\n             if (i === templateIndex)\n             {\n             currentEl.addClass('step-now');\n             previousEl.addClass('step-success');\n             nextEl.removeClass('step-success');\n             } else {\n             previousEl.removeClass('step-now');\n             nextEl.removeClass('step-now');\n             }\n             }*/\n        },\n\n        updateCampsiteData: function (index) {\n            sessionStorage.campsitetosend = JSON.stringify(self.state.campsitetosend);\n            self.state.datatosend.campsite = JSON.parse(sessionStorage.campsitetosend);\n            self.handlers.postDataToServer();\n            //self.events.changeTemplate(index);\n        }\n\n    };\n\n    // Handlers\n    this.handlers = {\n        fillOfferTemplates: function () {\n            self.state.templates =[\n                { name: 'state-1.html', url: 'assets/templates/offer/state-1.html', index: 0},\n                { name: 'state-finish.html', url: 'assets/templates/offer/state-finish.html', index: 1}];\n            self.state.template = self.state.templates[0];\n        },\n\n        postDataToServer: function () {\n            console.log(self.state.datatosend);\n            service.post(savecampsiteurl, self.state.datatosend).then (\n                function successCallback(response) {\n                    console.log(response);\n\n                    self.events.changeTemplate(1);\n\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        }\n    };\n\n    // Listeners\n    $rootScope.$on('$locationChangeSuccess', function() {\n        self.handlers.fillOfferTemplates();\n        //self.handlers.fillStateFromsessionStorage();\n    });\n\n    // Init\n    this.state = {\n        templates: [],\n        template: '',\n\n        campsitetosend: {},\n        datatosend: {}\n    };\n}]);\n"]}