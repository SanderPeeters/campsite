{"version":3,"sources":["annotated.js"],"names":[],"mappingsfile":"angular.js","sourcesContent":["var dependencies = [\n    'campsite.services',\n    'campsite.directives',\n    'campsite.controllers',\n\n    'ngAnimate',\n    'ngRoute',\n    'ngSanitize',\n    'angular.filter',\n    'validation',\n    'validation.rule',\n    'angularFileUpload',\n    '720kb.tooltips',\n    'toastr',\n    'angular.vertilize',\n    'ui.select'\n];\n\nvar campsite = {\n    app: angular.module('campsite', dependencies),\n    controllers: angular.module('campsite.controllers', []),\n    directives: angular.module('campsite.directives', []),\n    services: angular.module('campsite.services', [])\n};\n\ncampsite.app.config([\"$locationProvider\", \"$interpolateProvider\", \"$sceDelegateProvider\", \"toastrConfig\", function($locationProvider, $interpolateProvider, $sceDelegateProvider, toastrConfig) {\n    var supports_history_api = function() {\n        return !!(window.history && history.pushState);\n    };\n\n    $interpolateProvider.startSymbol('##');\n    $interpolateProvider.endSymbol('##');\n    if (supports_history_api()) {\n        $locationProvider.html5Mode(true);\n    } else {\n        $locationProvider.html5Mode(false);\n    }\n\n    $sceDelegateProvider.resourceUrlWhitelist([\n        'self',\n        'https://www.carqueryapi.com/**'\n    ]);\n\n    angular.extend(toastrConfig, {\n        allowHtml: false,\n        closeButton: true,\n        //closeHtml: '<button>&times;</button>',\n        extendedTimeOut: 1000,\n        iconClasses: {\n            error: 'toast-error',\n            info: 'toast-info',\n            success: 'toast-success',\n            warning: 'toast-warning'\n        },\n        messageClass: 'toast-message',\n        onHidden: null,\n        onShown: null,\n        onTap: null,\n        progressBar: true,\n        tapToDismiss: true,\n        timeOut: 5000,\n        titleClass: 'toast-title',\n        toastClass: 'toast',\n        autoDismiss: false,\n        containerId: 'toast-container',\n        maxOpened: 3,\n        newestOnTop: true,\n        positionClass: 'toast-bottom-center',\n        preventDuplicates: true,\n        preventOpenDuplicates: true,\n        target: 'body'\n    });\n\n}]);\n\ncampsite.directives.directive('pwCheck', function() {\n  return {\n    require: 'ngModel',\n    link: function (scope, elem, attrs, ctrl) {\n      var firstPassword = '#' + attrs.pwCheck;\n      elem.add(firstPassword).on('keyup', function () {\n        scope.$apply(function () {\n          var v = elem.val()===$(firstPassword).val();\n          ctrl.$setValidity('pwmatch', v);\n        });\n      });\n    }\n  }\n});\n\ncampsite.services.service('service', [\"$http\", \"$q\", function($http, $q){\n  this.fetch = function(method, url, data) {\n    var _promise = $q.defer();\n    $http({\n      method: method,\n      url: url,\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function(response) {\n      _promise.resolve(response.data);\n    }, function(error) {\n      _promise.reject(error);\n    });\n\n    return _promise.promise;\n  };\n\n    this.fetch2 = function(method, url, data) {\n        var _promise = $q.defer();\n        $http({\n            method: method,\n            url: url,\n            params: data,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function(response) {\n            _promise.resolve(response.data);\n        }, function(error) {\n            _promise.reject(error);\n        });\n\n        return _promise.promise;\n    };\n\n  this.get = function(url, data) {\n    //var data = {};\n    return this.fetch2('GET', url, data);\n  };\n\n  this.post = function(url, data) {\n    return this.fetch('POST', url, data);\n  };\n\n  this.jsonp = function(url) {\n      return this.fetch('JSONP', url);\n  }\n}]);\n\ncampsite.controllers.controller('InventoryCtrl', [\"$scope\", \"$rootScope\", \"$location\", \"service\", \"$window\", \"$route\", \"$timeout\", function($scope, $rootScope, $location, service, $window, $route, $timeout){\n  var self = this;\n  var carinventoryurl = \"/auto/offers\";\n  var carsearchurl = \"/auto/search\";\n  var savequeryurl = \"/auto/search/save\";\n  var updateemailurl = \"/dealer/zoekopdrachten/update\";\n\n\n  // Events\n  this.events = {\n\n    changePage: function(url){\n      self.handlers.getPagination(url);\n    }\n\n  };\n\n  // Handlers\n  this.handlers = {\n    getAllOffers: function() {\n      self.state.car_offers_loading = true;\n      service.get(carinventoryurl)\n      .then(function success(response) {\n        console.log(response);\n        self.state.car_offers = response.data;\n        self.state.car_offers_loading = false;\n        self.state.paginate_nexturl = response.next_page_url;\n        self.state.paginate_previousurl = response.prev_page_url;\n\n        self.state.number_of_cars = response.total;\n        self.state.current_page = response.current_page;\n        self.state.number_of_pages = response.last_page;\n      }, function error(response) {\n        console.log(response);\n      });\n    },\n\n    search: function() {\n      self.state.car_offers_loading = true;\n      self.state.car_models_loading = true;\n      self.state.searchObject.car_model = JSON.stringify(self.state.searchObject.car_model);\n      console.log(self.state.searchObject);\n      $timeout( function(){\n        service.get(carsearchurl, self.state.searchObject)\n        .then(function success(response) {\n          $location.path('/inventaris');\n          console.log(response);\n          self.state.car_offers = response.data;\n          self.state.car_offers_loading = false;\n          self.state.paginate_nexturl = response.next_page_url;\n          self.state.paginate_previousurl = response.prev_page_url;\n\n          self.state.number_of_cars = response.total;\n          self.state.current_page = response.current_page;\n          self.state.number_of_pages = response.last_page;\n          self.state.searchObject.car_model = JSON.parse(self.state.searchObject.car_model);\n          self.state.car_models_loading = false;\n        }, function error(response) {\n          console.log(response);\n          self.state.searchObject.car_model = JSON.parse(self.state.searchObject.car_model);\n        });\n      }, 10 );\n    },\n    saveSearchQuery: function() {\n      self.state.searchObject.car_model = JSON.stringify(self.state.searchObject.car_model);\n      service.post(savequeryurl, self.state.searchObject)\n      .then(function success(response) {\n        self.state.searchObject.searchquery_name = '';\n        self.state.searchObject.car_model = JSON.parse(self.state.searchObject.car_model)\n      }, function error(response) {\n        console.log(response);\n        self.state.searchObject.car_model = JSON.parse(self.state.searchObject.car_model)\n      });\n\n    },\n\n    resetFilters: function() {\n      self.state.searchObject = {};\n    },\n\n    getPagination: function(url) {\n      self.state.car_offers_loading = true;\n      service.get(url)\n      .then(function success(response) {\n        console.log(response);\n        self.state.car_offers = response.data;\n        self.state.car_offers_loading = false;\n        self.state.paginate_nexturl = response.next_page_url;\n        self.state.paginate_previousurl = response.prev_page_url;\n\n        self.state.number_of_cars = response.total;\n        self.state.current_page = response.current_page;\n        self.state.number_of_pages = response.last_page;\n      }, function error(response) {\n        console.log(response);\n      });\n    },\n\n    onChange: function(id) {\n      self.state.emailid.id = id;\n      service.post(updateemailurl, self.state.emailid)\n      .then(function success(response) {\n        console.log(response.needs_email);\n      }, function error(response) {\n        console.log(response);\n      });\n    }\n  };\n\n  // Listeners\n  $rootScope.$on('$locationChangeSuccess', function() {\n    //  self.handlers.getAllOffers();\n  });\n\n  // Init\n  this.state = {\n    car_offers: [],\n    car_offers_loading: false,\n    sortBy: 'end_date_bidding',  // set the default sort type\n    sortReverse: true, // set the default sort order\n    searchObject: {},\n\n    emailid: {},\n    searchqueries: {},\n\n    searchAdvanced: false,\n\n    paginate_nexturl: null,\n    paginate_previousurl: null,\n\n    number_of_cars: null,\n    current_page: null,\n    number_of_pages: null\n  };\n}]);\n"]}