{"version":3,"sources":["annotated.js"],"names":[],"mappingsfile":"angular.js","sourcesContent":["var dependencies = [\n    'campsite.services',\n    'campsite.directives',\n    'campsite.controllers',\n\n    'ngAnimate',\n    'ngRoute',\n    'ngSanitize',\n    'angular.filter',\n    'validation',\n    'validation.rule',\n    'angularFileUpload',\n    '720kb.tooltips',\n    'toastr',\n    'angular.vertilize',\n    'ui.select',\n    'textAngularSetup',\n    'textAngular'\n];\n\nvar campsite = {\n    app: angular.module('campsite', dependencies),\n    controllers: angular.module('campsite.controllers', []),\n    directives: angular.module('campsite.directives', []),\n    services: angular.module('campsite.services', [])\n};\n\ncampsite.app.config([\"$locationProvider\", \"$interpolateProvider\", \"$sceDelegateProvider\", \"toastrConfig\", function($locationProvider, $interpolateProvider, $sceDelegateProvider, toastrConfig) {\n    var supports_history_api = function() {\n        return !!(window.history && history.pushState);\n    };\n\n    $interpolateProvider.startSymbol('##');\n    $interpolateProvider.endSymbol('##');\n    if (supports_history_api()) {\n        $locationProvider.html5Mode(true);\n    } else {\n        $locationProvider.html5Mode(false);\n    }\n\n    $sceDelegateProvider.resourceUrlWhitelist([\n        'self',\n        'https://www.carqueryapi.com/**'\n    ]);\n\n    angular.extend(toastrConfig, {\n        allowHtml: false,\n        closeButton: true,\n        //closeHtml: '<button>&times;</button>',\n        extendedTimeOut: 1000,\n        iconClasses: {\n            error: 'toast-error',\n            info: 'toast-info',\n            success: 'toast-success',\n            warning: 'toast-warning'\n        },\n        messageClass: 'toast-message',\n        onHidden: null,\n        onShown: null,\n        onTap: null,\n        progressBar: true,\n        tapToDismiss: true,\n        timeOut: 5000,\n        titleClass: 'toast-title',\n        toastClass: 'toast',\n        autoDismiss: false,\n        containerId: 'toast-container',\n        maxOpened: 3,\n        newestOnTop: true,\n        positionClass: 'toast-bottom-center',\n        preventDuplicates: true,\n        preventOpenDuplicates: true,\n        target: 'body'\n    });\n\n}]);\n\ncampsite.directives.directive('googleplace', function() {\n    return {\n        require: 'ngModel',\n        scope: {\n            ngModel: '=',\n            latitude: '=?',\n            longitude: '=?',\n            number: '=?',\n            street: '=?',\n            city: '=?',\n            state: '=?',\n            province: '=?',\n            zipcode: '=?',\n            /*details: '=?'*/\n        },\n        link: function(scope, element, attrs, model) {\n            var options = {\n                types: [],\n                componentRestrictions: {country: \"be\"}\n            };\n            scope.gPlace = new google.maps.places.Autocomplete(element[0], options);\n\n            google.maps.event.addListener(scope.gPlace, 'place_changed', function() {\n                var geoComponents = scope.gPlace.getPlace();\n\n                var latitude = geoComponents.geometry.location.lat();\n                var longitude = geoComponents.geometry.location.lng();\n                var street_number, street, zipcode, city, state, province;\n\n                var addressComponents = geoComponents.address_components;\n\n                addressComponents = addressComponents.filter(function(component){\n                    switch (component.types[0]) {\n                        case \"street_number\": // street number\n                            street_number = component.long_name;\n                            return true;\n                        case \"route\": // street\n                            street = component.long_name;\n                            return true;\n                        case \"postal_code\": // zipcode\n                            zipcode = component.long_name;\n                            return true;\n                        case \"locality\": // city\n                            city = component.long_name;\n                            return true;\n                        case \"administrative_area_level_1\": // state\n                            state = component.long_name;\n                            return true;\n                        case \"administrative_area_level_2\": // province\n                            province = component.long_name;\n                            return true;\n                        default:\n                            return false;\n                    }\n                }).map(function(obj) {\n                    return obj.long_name;\n                });\n\n                //addressComponents.push(latitude, longitude);\n\n                scope.$apply(function() {\n                    //scope.details = addressComponents; // array containing each location component\n                    scope.latitude = latitude;\n                    scope.longitude = longitude;\n                    scope.number = street_number;\n                    scope.street = street;\n                    scope.zipcode = zipcode;\n                    scope.city = city;\n                    scope.state = state;\n                    scope.province = province;\n                    model.$setViewValue(element.val());\n                });\n            });\n        }\n    };\n});\n\ncampsite.directives.directive('ngThumb', [\"$window\", function($window) {\n    var helper = {\n        support: !!($window.FileReader && $window.CanvasRenderingContext2D),\n        isFile: function(item) {\n            return angular.isObject(item) && item instanceof $window.File;\n        },\n        isImage: function(file) {\n            var type =  '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\n            return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\n        }\n    };\n\n    return {\n        restrict: 'A',\n        template: '<canvas/>',\n        link: function(scope, element, attributes) {\n            if (!helper.support) return;\n\n            var params = scope.$eval(attributes.ngThumb);\n\n            if (!helper.isFile(params.file)) return;\n            if (!helper.isImage(params.file)) return;\n\n            var canvas = element.find('canvas');\n            var reader = new FileReader();\n\n            reader.onload = onLoadFile;\n            reader.readAsDataURL(params.file);\n\n            function onLoadFile(event) {\n                var img = new Image();\n                img.onload = onLoadImage;\n                img.src = event.target.result;\n            }\n\n            function onLoadImage() {\n                var width = params.width || this.width / this.height * params.height;\n                var height = params.height || this.height / this.width * params.width;\n                canvas.attr({ width: width, height: height });\n                canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\n            }\n        }\n    };\n}]);\n\ncampsite.directives.directive('pwCheck', function() {\n  return {\n    require: 'ngModel',\n    link: function (scope, elem, attrs, ctrl) {\n      var firstPassword = '#' + attrs.pwCheck;\n      elem.add(firstPassword).on('keyup', function () {\n        scope.$apply(function () {\n          var v = elem.val()===$(firstPassword).val();\n          ctrl.$setValidity('pwmatch', v);\n        });\n      });\n    }\n  }\n});\n\ncampsite.services.service('service', [\"$http\", \"$q\", function($http, $q){\n    this.fetch = function(method, url, data) {\n        var _promise = $q.defer();\n        $http({\n            method: method,\n            url: url,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function(response) {\n            _promise.resolve(response.data);\n        }, function(error) {\n            _promise.reject(error);\n        });\n\n        return _promise.promise;\n    };\n\n    this.fetch2 = function(method, url, data) {\n        var _promise = $q.defer();\n        $http({\n            method: method,\n            url: url,\n            params: data,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function(response) {\n            _promise.resolve(response.data);\n        }, function(error) {\n            _promise.reject(error);\n        });\n\n        return _promise.promise;\n    };\n\n    this.get = function(url, data) {\n        //var data = {};\n        return this.fetch2('GET', url, data);\n    };\n\n    this.post = function(url, data) {\n        return this.fetch('POST', url, data);\n    };\n\n    this.jsonp = function(url) {\n        return this.fetch('JSONP', url);\n    }\n}]);\n\ncampsite.controllers.controller('OfferCtrl', [\"$scope\", \"$rootScope\", \"$location\", \"service\", \"$window\", \"FileUploader\", \"toastr\", function($scope, $rootScope, $location, service, $window, FileUploader, toastr){\n    var self = this;\n    var savecampsiteurl = '/en/campsite-offer/store';\n    var imagesaveurl = '/en/campsite-offer/images/store';\n\n    // Events\n    this.events = {\n\n        changeTemplate: function (index) {\n            self.state.template = self.state.templates[index];\n            /*var templateIndex = self.state.template.index;\n             var previousTemplateIndex = templateIndex - 1;\n             var nextTemplateIndex = templateIndex + 1;\n\n             var currentEl = angular.element( document.querySelector( '#head_step' + templateIndex ) );\n             var previousEl = angular.element( document.querySelector( '#head_step' + previousTemplateIndex) );\n             var nextEl = angular.element( document.querySelector( '#head_step' + nextTemplateIndex) );\n\n             for (i = 0; i < self.state.templates.length; i++) {\n             if (i === templateIndex)\n             {\n             currentEl.addClass('step-now');\n             previousEl.addClass('step-success');\n             nextEl.removeClass('step-success');\n             } else {\n             previousEl.removeClass('step-now');\n             nextEl.removeClass('step-now');\n             }\n             }*/\n        },\n\n        updateCampsiteData: function (index) {\n\n            sessionStorage.campsitetosend = JSON.stringify(self.state.campsitetosend);\n            sessionStorage.imagestosend = JSON.stringify(self.state.imagestosend);\n            console.log(self.state.campsitetosend);\n\n            if (index == 3)\n            {\n                self.events.storeInfo();\n            }\n            self.events.changeTemplate(index);\n        },\n\n        storeInfo: function () {\n            self.state.datatosend.campsite = JSON.parse(sessionStorage.campsitetosend);\n            self.state.datatosend.images = JSON.parse(sessionStorage.imagestosend);\n            console.log(self.state.datatosend);\n            self.handlers.postDataToServer();\n        }\n\n    };\n\n    // Handlers\n    this.handlers = {\n        fillOfferTemplates: function () {\n            self.state.templates =[\n                { name: 'state-1.html', url: 'assets/templates/offer/state-1.html', index: 0},\n                { name: 'state-2.html', url: 'assets/templates/offer/state-2.html', index: 1},\n                { name: 'state-3.html', url: 'assets/templates/offer/state-3.html', index: 2},\n                { name: 'state-finish.html', url: 'assets/templates/offer/state-finish.html', index: 4}];\n            self.state.template = self.state.templates[0];\n        },\n\n        postDataToServer: function () {\n            console.log(self.state.datatosend);\n            service.post(savecampsiteurl, self.state.datatosend).then (\n                function successCallback(response) {\n                    console.log(response);\n                    sessionStorage.removeItem(\"campsitetosend\");\n                    sessionStorage.removeItem(\"imagestosend\");\n\n                    self.events.changeTemplate(4);\n\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        }\n    };\n\n    // Listeners\n    $rootScope.$on('$locationChangeSuccess', function() {\n        self.handlers.fillOfferTemplates();\n        //self.handlers.fillStateFromsessionStorage();\n    });\n\n    // Init\n    this.state = {\n        templates: [],\n        template: '',\n\n        campsitetosend: {},\n        imagestosend: [],\n        datatosend: {},\n\n        csrf_token: laravel_csrf,\n\n        imageuploader: new FileUploader({\n            url: imagesaveurl,\n            filters: [{\n                name: 'sizeSmallerThan',\n                // Image must be smaller than 10 mb +-\n                fn: function(item) {\n                    if(item.size < 10000000){\n                        return true;\n                    }\n                    else{\n                        toastr.warning('Images must be smaller than 10MB!', 'Attention');\n                    }\n                }\n            },\n                {\n                    name: 'isImage',\n                    // file must be of type image\n                    fn: function(item) {\n                        if(item.type = 'image/*'){\n                            console.log(item);\n                            return true;\n                        }\n                        else{\n                            console.log(item);\n                            toastr.warning('File has to be an image!', 'Attention');\n                        }\n                    }\n                }]\n        })\n    };\n\n    self.state.imageuploader.onCompleteItem = function(fileItem, response, status, headers) {\n        console.info('onCompleteItem', headers);\n        if(status == 200 && response.identifier){\n            console.log(response);\n            self.state.imagestosend.push(response.identifier);\n        }\n        else{\n            if(response.error.imagetosave){\n                toastr.error(response.error.imagetosave[0], 'Error');\n            }\n            else{\n                toastr.error('Something went wrong during the upload of this picture!', 'Error');\n            }\n            //console.log(response.error);\n        }\n        //console.log(self.state.imagestosend);\n    };\n}]);\n"]}